html
  head
    title= title
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/dygraph/2.1.0/dygraph.min.css" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/dygraph/2.1.0/dygraph.min.js"></script>
  body
    h1.kitty#kittyid= title
    h2= title2

    <div id="graphdiv"></div>
    <div>   </div>

script.
 
 let kittystring = !{JSON.stringify(message)};
 let yaxis = !{JSON.stringify(y_axis)};
 let xaxis = !{JSON.stringify(x_axis)};
 let kittytitle = !{JSON.stringify(title)};

 console.log("kittytitle = " + kittytitle);
 console.log("kittystring = " + kittystring);
 console.log("yaxis = " + yaxis);

 g = new Dygraph(
       // containing div
       document.getElementById("graphdiv"),

       kittystring,

        {
          // customBars: true,
          title: 'Qr code: [' + !{JSON.stringify(qrcode)} + "]",
          ylabel: yaxis,
          xlabel: xaxis,
          // legend: 'always',
          showRangeSelector: true
        },
 );

 entryrows = kittystring.split("\n");
 // console.log("string start time: " + kittystring.split(",")[0])
 var start_time = parseInt( kittystring.split(",")[0] ) / 25.54270
 var orig_start_time = start_time
 console.log("start time: " + start_time);
 var totals_for_each_period = [0];
 var period_pos = 0;

 for (var i = 0; i < entryrows.length; i++) {
    console.log("entry_row[i]: [" + entryrows[i] + "]")
    if (entryrows[i] == "") {
      continue;
    }

    step_value = entryrows[i].split(",")[1]//.replace("\n", "")
    console.log("string step value: " + step_value)

    if ( parseInt(entryrows[i].split(",")) < start_time + 86400) {
        totals_for_each_period[period_pos] += parseInt( step_value);
    } else {
        totals_for_each_period.push( parseInt( entryrows[i].split(",")[1].trim() ) );
        period_pos++;
    }
 }


 for (var j = 0; j < totals_for_each_period.length; j++) {
      var date = new Date(parseInt(orig_start_time)*1000);
      // Hours part from the timestamp
      var year = date.getYear();
      var month = date.getMonth();
      var day = date.getDate();
      var hours = date.getHours();
      // Minutes part from the timestamp
      var minutes = "0" + date.getMinutes();
      // Seconds part from the timestamp
      var seconds = "0" + date.getSeconds();

      // Will display time in 10:30:23 format
      var formattedTime = year + "-" + month + "-" + day;
      
      console.log("formattedTime: " + formattedTime)

      orig_start_time = parseInt(orig_start_time) + 86400
      document.body.innerHTML += '<br><div>' + formattedTime + ': <span style="color:red">' + totals_for_each_period[j] + '</span></div>';

 }

 console.log("totals for each day: ", totals_for_each_period);


 // const mongo_uri    = "mongodb+srv://burrough:mittens@stopfalls-neprh.mongodb.net/test?retryWrites=true&w=majority"
 // const MongoClient = require('mongodb').MongoClient;
 // MongoClient.connect(mongo_uri, function(err, db) {
 //      console.log("POST: MongoDB connected");
 //      if (err) throw err;
 //      var dbo = db.db(stopfalls_db);
 //      dbo.collection("stopfalls_activity").find(myqry).forEach(function(doc) {
 //          response_string += doc['timestamp'] + "," + doc['accelX'] + "," + doc['accelY']+ "," + doc['accelZ']
 //          console.log(doc);
 //        }, function(err) {
 //          if (err) {
 //            console.log(err);
 //          }
 //          // done or error
 //          console.log("finished processing ...");
 //          // response.send("response_string = [" + response_string + "]");
 //          // response.end(); // cause error 'cannot set headers after being sent'
 //        });
 //  });



// feature extraction
// 